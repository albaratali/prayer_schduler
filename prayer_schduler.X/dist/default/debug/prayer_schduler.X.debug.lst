

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 07 12:37:35 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 22/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234     0008                     _PORTD	set	8
   235     0049                     _RE1	set	73
   236     004A                     _RE2	set	74
   237     0088                     _TRISD	set	136
   238     0449                     _TRISE1	set	1097
   239     044A                     _TRISE2	set	1098
   240                           
   241                           	psect	strings
   242     0003                     __pstrings:
   243     0003                     stringtab:
   244     0003                     __stringtab:
   245     0003                     stringcode:	
   246                           ;	String table - string pointers are 1 byte each
   247                           
   248     0003                     stringdir:
   249     0003  3000               	movlw	high stringdir
   250     0004  008A               	movwf	10
   251     0005  0804               	movf	4,w
   252     0006  0A84               	incf	4,f
   253     0007  0782               	addwf	2,f
   254     0008                     __stringbase:
   255     0008  3400               	retlw	0
   256     0009                     __end_of__stringtab:
   257     0009                     STR_2:
   258     0009  3420               	retlw	32	;' '
   259     000A  3420               	retlw	32	;' '
   260     000B  3420               	retlw	32	;' '
   261     000C  3420               	retlw	32	;' '
   262     000D  3420               	retlw	32	;' '
   263     000E  3454               	retlw	84	;'T'
   264     000F  3455               	retlw	85	;'U'
   265     0010  3452               	retlw	82	;'R'
   266     0011  344E               	retlw	78	;'N'
   267     0012  3420               	retlw	32	;' '
   268     0013  344F               	retlw	79	;'O'
   269     0014  344E               	retlw	78	;'N'
   270     0015  3420               	retlw	32	;' '
   271     0016  3420               	retlw	32	;' '
   272     0017  3420               	retlw	32	;' '
   273     0018  3400               	retlw	0
   274     0019                     STR_1:
   275     0019  3420               	retlw	32	;' '
   276     001A  3454               	retlw	84	;'T'
   277     001B  3469               	retlw	105	;'i'
   278     001C  346D               	retlw	109	;'m'
   279     001D  3465               	retlw	101	;'e'
   280     001E  342D               	retlw	45	;'-'
   281     001F  3420               	retlw	32	;' '
   282     0020  3400               	retlw	0
   283                           
   284                           	psect	cinit
   285     07FC                     start_initialization:	
   286                           ; #config settings
   287                           
   288     07FC                     __initialization:
   289     07FC                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292     07FC                     __end_of__initialization:
   293     07FC  0183               	clrf	3
   294     07FD  120A  118A  2EDD   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	cstackCOMMON
   297     0070                     __pcstackCOMMON:
   298     0070                     ?_init_clcd:
   299     0070                     ?_turn_on:	
   300                           ; 1 bytes @ 0x0
   301                           
   302     0070                     ?_clear_screen:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ?_set_time:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_clcd_write:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_init_display_controller:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_init_config:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?_main:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     clcd_write@mode:	
   321                           ; 1 bytes @ 0x0
   322                           
   323                           
   324                           ; 1 bytes @ 0x0
   325     0070                     	ds	1
   326     0071                     ??_clcd_write:
   327                           
   328                           ; 1 bytes @ 0x1
   329     0071                     	ds	2
   330     0073                     clcd_write@byte:
   331                           
   332                           ; 1 bytes @ 0x3
   333     0073                     	ds	1
   334     0074                     ??_clear_screen:
   335     0074                     ?_clcd_print:	
   336                           ; 1 bytes @ 0x4
   337                           
   338     0074                     ?_clcd_putch:	
   339                           ; 1 bytes @ 0x4
   340                           
   341     0074                     ??_init_display_controller:	
   342                           ; 1 bytes @ 0x4
   343                           
   344     0074                     clcd_putch@addr:	
   345                           ; 1 bytes @ 0x4
   346                           
   347     0074                     clcd_print@addr:	
   348                           ; 1 bytes @ 0x4
   349                           
   350                           
   351                           ; 1 bytes @ 0x4
   352     0074                     	ds	1
   353     0075                     ??_clcd_print:
   354     0075                     ??_clcd_putch:	
   355                           ; 1 bytes @ 0x5
   356                           
   357     0075                     clcd_putch@data:	
   358                           ; 1 bytes @ 0x5
   359                           
   360     0075                     clcd_print@str:	
   361                           ; 1 bytes @ 0x5
   362                           
   363                           
   364                           ; 1 bytes @ 0x5
   365     0075                     	ds	1
   366     0076                     ??_init_clcd:
   367     0076                     ??_turn_on:	
   368                           ; 1 bytes @ 0x6
   369                           
   370     0076                     ??_set_time:	
   371                           ; 1 bytes @ 0x6
   372                           
   373     0076                     ??_init_config:	
   374                           ; 1 bytes @ 0x6
   375                           
   376                           
   377                           ; 1 bytes @ 0x6
   378     0076                     	ds	3
   379     0079                     turn_on@i:
   380                           
   381                           ; 1 bytes @ 0x9
   382     0079                     	ds	1
   383     007A                     ??_main:
   384     007A                     main@operation_flag:	
   385                           ; 1 bytes @ 0xA
   386                           
   387                           
   388                           ; 2 bytes @ 0xA
   389     007A                     	ds	2
   390                           
   391                           	psect	maintext
   392     06DD                     __pmaintext:	
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 21 in file "main.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;  operation_fl    2   10[COMMON] int 
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : B00/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   412 ;;      Params:         0       0       0       0       0
   413 ;;      Locals:         2       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0
   415 ;;      Totals:         2       0       0       0       0
   416 ;;Total ram usage:        2 bytes
   417 ;; Hardware stack levels required when called: 4
   418 ;; This function calls:
   419 ;;		_clear_screen
   420 ;;		_init_config
   421 ;;		_set_time
   422 ;;		_turn_on
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428     06DD                     _main:	
   429                           ;psect for function _main
   430                           
   431     06DD                     l868:	
   432                           ;incstack = 0
   433                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   434                           
   435                           
   436                           ;main.c: 22:             case 0x02:
   437     06DD  120A  118A  2679  120A  118A  	fcall	_init_config
   438     06E2                     l870:
   439                           
   440                           ;main.c: 24:                 break;
   441     06E2  3001               	movlw	1
   442     06E3  00FA               	movwf	main@operation_flag
   443     06E4  3000               	movlw	0
   444     06E5  00FB               	movwf	main@operation_flag+1
   445     06E6  2EFB               	goto	l882
   446     06E7                     l872:
   447                           
   448                           ;main.c: 31: 
   449     06E7  120A  118A  2741  120A  118A  	fcall	_turn_on
   450     06EC                     l874:
   451                           
   452                           ;main.c: 32: void set_time(void)
   453     06EC  120A  118A  2693  120A  118A  	fcall	_clear_screen
   454     06F1                     l876:
   455                           
   456                           ;main.c: 33: {
   457     06F1  3003               	movlw	3
   458     06F2  00FA               	movwf	main@operation_flag
   459     06F3  3000               	movlw	0
   460     06F4  00FB               	movwf	main@operation_flag+1
   461                           
   462                           ;main.c: 34:     clcd_print(" Time- ",(0x80 + 0));
   463     06F5  2EFB               	goto	l882
   464     06F6                     l878:
   465                           
   466                           ;main.c: 36: 
   467     06F6  120A  118A  267F  120A  118A  	fcall	_set_time
   468     06FB                     l882:	
   469                           ;main.c: 37: void clear_screen(void)
   470                           
   471                           
   472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   473                           ; Switch size 1, requested type "simple"
   474                           ; Number of cases is 1, Range of values is 0 to 0
   475                           ; switch strategies available:
   476                           ; Name         Instructions Cycles
   477                           ; simple_byte            4     3 (average)
   478                           ; direct_byte           11     8 (fixed)
   479                           ; jumptable            260     6 (fixed)
   480                           ;	Chosen strategy is simple_byte
   481     06FB  087B               	movf	main@operation_flag+1,w
   482     06FC  3A00               	xorlw	0	; case 0
   483     06FD  1903               	skipnz
   484     06FE  2F00               	goto	l908
   485     06FF  2EFB               	goto	l882
   486     0700                     l908:
   487                           
   488                           ; Switch size 1, requested type "simple"
   489                           ; Number of cases is 2, Range of values is 1 to 2
   490                           ; switch strategies available:
   491                           ; Name         Instructions Cycles
   492                           ; simple_byte            7     4 (average)
   493                           ; direct_byte           17    11 (fixed)
   494                           ; jumptable            263     9 (fixed)
   495                           ;	Chosen strategy is simple_byte
   496     0700  087A               	movf	main@operation_flag,w
   497     0701  3A01               	xorlw	1	; case 1
   498     0702  1903               	skipnz
   499     0703  2EE7               	goto	l872
   500     0704  3A03               	xorlw	3	; case 2
   501     0705  1903               	skipnz
   502     0706  2EF6               	goto	l878
   503     0707  2EFB               	goto	l882
   504     0708  120A  118A  2800   	ljmp	start
   505     070B                     __end_of_main:
   506                           
   507                           	psect	text1
   508     0741                     __ptext1:	
   509 ;; *************** function _turn_on *****************
   510 ;; Defined at:
   511 ;;		line 57 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  i               1    9[COMMON] unsigned char 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   525 ;;      Params:         0       0       0       0       0
   526 ;;      Locals:         1       0       0       0       0
   527 ;;      Temps:          3       0       0       0       0
   528 ;;      Totals:         4       0       0       0       0
   529 ;;Total ram usage:        4 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 2
   532 ;; This function calls:
   533 ;;		_clcd_print
   534 ;;		_clcd_putch
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540     0741                     _turn_on:	
   541                           ;psect for function _turn_on
   542                           
   543     0741                     l830:	
   544                           ;incstack = 0
   545                           ; Regs used in _turn_on: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   546                           
   547                           
   548                           ;main.c: 59:         _delay((unsigned long)((50)*(20000000/4000.0)));;main.c: 61:     _d
      +                          elay((unsigned long)((100)*(20000000/4000.0)));
   549     0741  01F9               	clrf	turn_on@i
   550     0742                     l836:
   551                           
   552                           ;main.c: 62: }
   553     0742  0879               	movf	turn_on@i,w
   554     0743  3E80               	addlw	128
   555     0744  00F4               	movwf	clcd_putch@addr
   556     0745  30FF               	movlw	255
   557     0746  120A  118A  26A4  120A  118A  	fcall	_clcd_putch
   558     074B                     l838:
   559     074B  3002               	movlw	2
   560     074C  00F8               	movwf	??_turn_on+2
   561     074D  3045               	movlw	69
   562     074E  00F7               	movwf	??_turn_on+1
   563     074F  30A9               	movlw	169
   564     0750  00F6               	movwf	??_turn_on
   565     0751                     u137:
   566     0751  0BF6               	decfsz	??_turn_on,f
   567     0752  2F51               	goto	u137
   568     0753  0BF7               	decfsz	??_turn_on+1,f
   569     0754  2F51               	goto	u137
   570     0755  0BF8               	decfsz	??_turn_on+2,f
   571     0756  2F51               	goto	u137
   572     0757  2F58               	nop2
   573     0758                     l840:
   574     0758  3001               	movlw	1
   575     0759  00FF               	movwf	btemp+1
   576     075A  087F               	movf	btemp+1,w
   577     075B  07F9               	addwf	turn_on@i,f
   578     075C                     l842:
   579     075C  3010               	movlw	16
   580     075D  0279               	subwf	turn_on@i,w
   581     075E  1C03               	skipc
   582     075F  2F61               	goto	u111
   583     0760  2F62               	goto	u110
   584     0761                     u111:
   585     0761  2F42               	goto	l836
   586     0762                     u110:
   587     0762                     l844:
   588     0762  30C0               	movlw	192
   589     0763  00F4               	movwf	clcd_print@addr
   590     0764  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   591     0765  120A  118A  26B5  120A  118A  	fcall	_clcd_print
   592     076A                     l846:
   593     076A  01F9               	clrf	turn_on@i
   594     076B                     l852:
   595     076B  0879               	movf	turn_on@i,w
   596     076C  3ED0               	addlw	208
   597     076D  00F4               	movwf	clcd_putch@addr
   598     076E  30FF               	movlw	255
   599     076F  120A  118A  26A4  120A  118A  	fcall	_clcd_putch
   600     0774                     l854:
   601     0774  3002               	movlw	2
   602     0775  00F8               	movwf	??_turn_on+2
   603     0776  3045               	movlw	69
   604     0777  00F7               	movwf	??_turn_on+1
   605     0778  30A9               	movlw	169
   606     0779  00F6               	movwf	??_turn_on
   607     077A                     u147:
   608     077A  0BF6               	decfsz	??_turn_on,f
   609     077B  2F7A               	goto	u147
   610     077C  0BF7               	decfsz	??_turn_on+1,f
   611     077D  2F7A               	goto	u147
   612     077E  0BF8               	decfsz	??_turn_on+2,f
   613     077F  2F7A               	goto	u147
   614     0780  2F81               	nop2
   615     0781                     l856:
   616     0781  3001               	movlw	1
   617     0782  00FF               	movwf	btemp+1
   618     0783  087F               	movf	btemp+1,w
   619     0784  07F9               	addwf	turn_on@i,f
   620     0785                     l858:
   621     0785  3010               	movlw	16
   622     0786  0279               	subwf	turn_on@i,w
   623     0787  1C03               	skipc
   624     0788  2F8A               	goto	u121
   625     0789  2F8B               	goto	u120
   626     078A                     u121:
   627     078A  2F6B               	goto	l852
   628     078B                     u120:
   629     078B                     l860:
   630     078B  3003               	movlw	3
   631     078C  00F8               	movwf	??_turn_on+2
   632     078D  308A               	movlw	138
   633     078E  00F7               	movwf	??_turn_on+1
   634     078F  3055               	movlw	85
   635     0790  00F6               	movwf	??_turn_on
   636     0791                     u157:
   637     0791  0BF6               	decfsz	??_turn_on,f
   638     0792  2F91               	goto	u157
   639     0793  0BF7               	decfsz	??_turn_on+1,f
   640     0794  2F91               	goto	u157
   641     0795  0BF8               	decfsz	??_turn_on+2,f
   642     0796  2F91               	goto	u157
   643     0797  2F98               	nop2
   644     0798                     l44:
   645     0798  0008               	return
   646     0799                     __end_of_turn_on:
   647                           
   648                           	psect	text2
   649     06A4                     __ptext2:	
   650 ;; *************** function _clcd_putch *****************
   651 ;; Defined at:
   652 ;;		line 41 in file "clcd.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  data            1    wreg     const unsigned char 
   655 ;;  addr            1    4[COMMON] unsigned char 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  data            1    5[COMMON] const unsigned char 
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0, pclath, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         1       0       0       0       0
   668 ;;      Locals:         1       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0
   670 ;;      Totals:         2       0       0       0       0
   671 ;;Total ram usage:        2 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; Hardware stack levels required when called: 1
   674 ;; This function calls:
   675 ;;		_clcd_write
   676 ;; This function is called by:
   677 ;;		_turn_on
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681     06A4                     _clcd_putch:	
   682                           ;psect for function _clcd_putch
   683                           
   684                           
   685                           ;incstack = 0
   686                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
   687                           ;clcd_putch@data stored from wreg
   688     06A4  00F5               	movwf	clcd_putch@data
   689     06A5                     l826:
   690                           
   691                           ;clcd.c: 41: void clcd_putch(const char data, unsigned char addr);clcd.c: 42: {;clcd.c: 
      +                          43:     clcd_write(addr, 0);
   692     06A5  01F0               	clrf	clcd_write@mode
   693     06A6  0874               	movf	clcd_putch@addr,w
   694     06A7  120A  118A  270B  120A  118A  	fcall	_clcd_write
   695                           
   696                           ;clcd.c: 44:     clcd_write(data, 1);
   697     06AC  01F0               	clrf	clcd_write@mode
   698     06AD  0AF0               	incf	clcd_write@mode,f
   699     06AE  0875               	movf	clcd_putch@data,w
   700     06AF  120A  118A  270B  120A  118A  	fcall	_clcd_write
   701     06B4                     l71:
   702     06B4  0008               	return
   703     06B5                     __end_of_clcd_putch:
   704                           
   705                           	psect	text3
   706     067F                     __ptext3:	
   707 ;; *************** function _set_time *****************
   708 ;; Defined at:
   709 ;;		line 45 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0
   726 ;;      Totals:         0       0       0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels used: 1
   729 ;; Hardware stack levels required when called: 2
   730 ;; This function calls:
   731 ;;		_clcd_print
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737     067F                     _set_time:	
   738                           ;psect for function _set_time
   739                           
   740     067F                     l866:	
   741                           ;incstack = 0
   742                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   743                           
   744                           
   745                           ;main.c: 47: 
   746     067F  3080               	movlw	128
   747     0680  00F4               	movwf	clcd_print@addr
   748     0681  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   749     0682  120A  118A  26B5  120A  118A  	fcall	_clcd_print
   750     0687                     l34:
   751     0687  0008               	return
   752     0688                     __end_of_set_time:
   753                           
   754                           	psect	text4
   755     06B5                     __ptext4:	
   756 ;; *************** function _clcd_print *****************
   757 ;; Defined at:
   758 ;;		line 47 in file "clcd.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  str             1    wreg     PTR const unsigned char 
   761 ;;		 -> STR_2(16), STR_1(8), 
   762 ;;  addr            1    4[COMMON] unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  str             1    5[COMMON] PTR const unsigned char 
   765 ;;		 -> STR_2(16), STR_1(8), 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         1       0       0       0       0
   776 ;;      Locals:         1       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0
   778 ;;      Totals:         2       0       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 1
   782 ;; This function calls:
   783 ;;		_clcd_write
   784 ;; This function is called by:
   785 ;;		_set_time
   786 ;;		_turn_on
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790     06B5                     _clcd_print:	
   791                           ;psect for function _clcd_print
   792                           
   793                           
   794                           ;incstack = 0
   795                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   796                           ;clcd_print@str stored from wreg
   797     06B5  00F5               	movwf	clcd_print@str
   798     06B6                     l818:
   799                           
   800                           ;clcd.c: 47: void clcd_print(const char *str, unsigned char addr);clcd.c: 48: {;clcd.c: 
      +                          49:     clcd_write(addr, 0);
   801     06B6  01F0               	clrf	clcd_write@mode
   802     06B7  0874               	movf	clcd_print@addr,w
   803     06B8  120A  118A  270B  120A  118A  	fcall	_clcd_write
   804                           
   805                           ;clcd.c: 51:     while (*str != '\0')
   806     06BD  2ED0               	goto	l824
   807     06BE                     l820:
   808                           
   809                           ;clcd.c: 52:     {;clcd.c: 53:         clcd_write(*str, 1);
   810     06BE  01F0               	clrf	clcd_write@mode
   811     06BF  0AF0               	incf	clcd_write@mode,f
   812     06C0  0875               	movf	clcd_print@str,w
   813     06C1  0084               	movwf	4
   814     06C2  120A  118A  2003  120A  118A  	fcall	stringdir
   815     06C7  120A  118A  270B  120A  118A  	fcall	_clcd_write
   816     06CC                     l822:
   817                           
   818                           ;clcd.c: 54:         str++;
   819     06CC  3001               	movlw	1
   820     06CD  00FF               	movwf	btemp+1
   821     06CE  087F               	movf	btemp+1,w
   822     06CF  07F5               	addwf	clcd_print@str,f
   823     06D0                     l824:
   824                           
   825                           ;clcd.c: 51:     while (*str != '\0')
   826     06D0  0875               	movf	clcd_print@str,w
   827     06D1  0084               	movwf	4
   828     06D2  120A  118A  2003  120A  118A  	fcall	stringdir
   829     06D7  3A00               	xorlw	0
   830     06D8  1D03               	skipz
   831     06D9  2EDB               	goto	u101
   832     06DA  2EDC               	goto	u100
   833     06DB                     u101:
   834     06DB  2EBE               	goto	l820
   835     06DC                     u100:
   836     06DC                     l77:
   837     06DC  0008               	return
   838     06DD                     __end_of_clcd_print:
   839                           
   840                           	psect	text5
   841     0679                     __ptext5:	
   842 ;; *************** function _init_config *****************
   843 ;; Defined at:
   844 ;;		line 13 in file "main.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, pclath, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; Hardware stack levels required when called: 3
   865 ;; This function calls:
   866 ;;		_init_clcd
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872     0679                     _init_config:	
   873                           ;psect for function _init_config
   874                           
   875     0679                     l828:	
   876                           ;incstack = 0
   877                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   878                           
   879                           
   880                           ;main.c: 15:         switch(operation_flag)
   881     0679  120A  118A  2688  120A  118A  	fcall	_init_clcd
   882     067E                     l19:
   883     067E  0008               	return
   884     067F                     __end_of_init_config:
   885                           
   886                           	psect	text6
   887     0688                     __ptext6:	
   888 ;; *************** function _init_clcd *****************
   889 ;; Defined at:
   890 ;;		line 4 in file "clcd.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0, pclath, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 2
   911 ;; This function calls:
   912 ;;		_init_display_controller
   913 ;; This function is called by:
   914 ;;		_init_config
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918     0688                     _init_clcd:	
   919                           ;psect for function _init_clcd
   920                           
   921     0688                     l810:	
   922                           ;incstack = 0
   923                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   924                           
   925                           
   926                           ;clcd.c: 7:     TRISD = 0x00;
   927     0688  1683               	bsf	3,5	;RP0=1, select bank1
   928     0689  1303               	bcf	3,6	;RP1=0, select bank1
   929     068A  0188               	clrf	8	;volatile
   930     068B                     l812:
   931                           
   932                           ;clcd.c: 10:     TRISE2 = 0;
   933     068B  1109               	bcf	9,2	;volatile
   934     068C                     l814:
   935                           
   936                           ;clcd.c: 11:     TRISE1 = 0;
   937     068C  1089               	bcf	9,1	;volatile
   938     068D                     l816:
   939                           
   940                           ;clcd.c: 13:     init_display_controller();
   941     068D  120A  118A  2799  120A  118A  	fcall	_init_display_controller
   942     0692                     l65:
   943     0692  0008               	return
   944     0693                     __end_of_init_clcd:
   945                           
   946                           	psect	text7
   947     0799                     __ptext7:	
   948 ;; *************** function _init_display_controller *****************
   949 ;; Defined at:
   950 ;;		line 16 in file "clcd.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0, pclath, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0
   966 ;;      Temps:          2       0       0       0       0
   967 ;;      Totals:         2       0       0       0       0
   968 ;;Total ram usage:        2 bytes
   969 ;; Hardware stack levels used: 1
   970 ;; Hardware stack levels required when called: 1
   971 ;; This function calls:
   972 ;;		_clcd_write
   973 ;; This function is called by:
   974 ;;		_init_clcd
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978     0799                     _init_display_controller:	
   979                           ;psect for function _init_display_controller
   980                           
   981     0799                     l786:	
   982                           ;incstack = 0
   983                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   984                           
   985                           
   986                           ;clcd.c: 19:     _delay((unsigned long)((30)*(20000000/4000.0)));
   987     0799  30C3               	movlw	195
   988     079A  00F5               	movwf	??_init_display_controller+1
   989     079B  30CD               	movlw	205
   990     079C  00F4               	movwf	??_init_display_controller
   991     079D                     u167:
   992     079D  0BF4               	decfsz	??_init_display_controller,f
   993     079E  2F9D               	goto	u167
   994     079F  0BF5               	decfsz	??_init_display_controller+1,f
   995     07A0  2F9D               	goto	u167
   996     07A1                     l788:
   997                           
   998                           ;clcd.c: 22:     clcd_write(0x33, 0);
   999     07A1  01F0               	clrf	clcd_write@mode
  1000     07A2  3033               	movlw	51
  1001     07A3  120A  118A  270B  120A  118A  	fcall	_clcd_write
  1002     07A8                     l790:
  1003                           
  1004                           ;clcd.c: 23:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1005     07A8  301B               	movlw	27
  1006     07A9  00F5               	movwf	??_init_display_controller+1
  1007     07AA  309E               	movlw	158
  1008     07AB  00F4               	movwf	??_init_display_controller
  1009     07AC                     u177:
  1010     07AC  0BF4               	decfsz	??_init_display_controller,f
  1011     07AD  2FAC               	goto	u177
  1012     07AE  0BF5               	decfsz	??_init_display_controller+1,f
  1013     07AF  2FAC               	goto	u177
  1014     07B0  0000               	nop
  1015                           
  1016                           ;clcd.c: 24:     clcd_write(0x33, 0);
  1017     07B1  01F0               	clrf	clcd_write@mode
  1018     07B2  3033               	movlw	51
  1019     07B3  120A  118A  270B  120A  118A  	fcall	_clcd_write
  1020     07B8                     l792:
  1021                           
  1022                           ;clcd.c: 25:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1023     07B8  30A6               	movlw	166
  1024     07B9  00F4               	movwf	??_init_display_controller
  1025     07BA                     u187:
  1026     07BA  0BF4               	decfsz	??_init_display_controller,f
  1027     07BB  2FBA               	goto	u187
  1028     07BC  0000               	nop
  1029     07BD                     l794:
  1030                           
  1031                           ;clcd.c: 26:     clcd_write(0x33, 0);
  1032     07BD  01F0               	clrf	clcd_write@mode
  1033     07BE  3033               	movlw	51
  1034     07BF  120A  118A  270B  120A  118A  	fcall	_clcd_write
  1035     07C4                     l796:
  1036                           
  1037                           ;clcd.c: 27:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1038     07C4  2FC5               	nop2	;2 cycle nop
  1039     07C5  2FC6               	nop2	;2 cycle nop
  1040     07C6  0000               	nop
  1041     07C7                     l798:
  1042                           
  1043                           ;clcd.c: 29:     clcd_write(0x02, 0);
  1044     07C7  01F0               	clrf	clcd_write@mode
  1045     07C8  3002               	movlw	2
  1046     07C9  120A  118A  270B  120A  118A  	fcall	_clcd_write
  1047     07CE                     l800:
  1048                           
  1049                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1050     07CE  30A6               	movlw	166
  1051     07CF  00F4               	movwf	??_init_display_controller
  1052     07D0                     u197:
  1053     07D0  0BF4               	decfsz	??_init_display_controller,f
  1054     07D1  2FD0               	goto	u197
  1055     07D2  0000               	nop
  1056                           
  1057                           ;clcd.c: 31:     clcd_write(0x28, 0);
  1058     07D3  01F0               	clrf	clcd_write@mode
  1059     07D4  3028               	movlw	40
  1060     07D5  120A  118A  270B  120A  118A  	fcall	_clcd_write
  1061     07DA                     l802:
  1062                           
  1063                           ;clcd.c: 32:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1064     07DA  30A6               	movlw	166
  1065     07DB  00F4               	movwf	??_init_display_controller
  1066     07DC                     u207:
  1067     07DC  0BF4               	decfsz	??_init_display_controller,f
  1068     07DD  2FDC               	goto	u207
  1069     07DE  0000               	nop
  1070     07DF                     l804:
  1071                           
  1072                           ;clcd.c: 33:     clcd_write(0x01, 0);
  1073     07DF  01F0               	clrf	clcd_write@mode
  1074     07E0  3001               	movlw	1
  1075     07E1  120A  118A  270B  120A  118A  	fcall	_clcd_write
  1076                           
  1077                           ;clcd.c: 34:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1078     07E6  3004               	movlw	4
  1079     07E7  00F5               	movwf	??_init_display_controller+1
  1080     07E8  303D               	movlw	61
  1081     07E9  00F4               	movwf	??_init_display_controller
  1082     07EA                     u217:
  1083     07EA  0BF4               	decfsz	??_init_display_controller,f
  1084     07EB  2FEA               	goto	u217
  1085     07EC  0BF5               	decfsz	??_init_display_controller+1,f
  1086     07ED  2FEA               	goto	u217
  1087     07EE  2FEF               	nop2
  1088     07EF                     l806:
  1089                           
  1090                           ;clcd.c: 35:     clcd_write(0x0C, 0);
  1091     07EF  01F0               	clrf	clcd_write@mode
  1092     07F0  300C               	movlw	12
  1093     07F1  120A  118A  270B  120A  118A  	fcall	_clcd_write
  1094     07F6                     l808:
  1095                           
  1096                           ;clcd.c: 36:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1097     07F6  30A6               	movlw	166
  1098     07F7  00F4               	movwf	??_init_display_controller
  1099     07F8                     u227:
  1100     07F8  0BF4               	decfsz	??_init_display_controller,f
  1101     07F9  2FF8               	goto	u227
  1102     07FA  0000               	nop
  1103     07FB                     l68:
  1104     07FB  0008               	return
  1105     07FC                     __end_of_init_display_controller:
  1106                           
  1107                           	psect	text8
  1108     0693                     __ptext8:	
  1109 ;; *************** function _clear_screen *****************
  1110 ;; Defined at:
  1111 ;;		line 50 in file "main.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0
  1127 ;;      Temps:          2       0       0       0       0
  1128 ;;      Totals:         2       0       0       0       0
  1129 ;;Total ram usage:        2 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 1
  1132 ;; This function calls:
  1133 ;;		_clcd_write
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139     0693                     _clear_screen:	
  1140                           ;psect for function _clear_screen
  1141                           
  1142     0693                     l862:	
  1143                           ;incstack = 0
  1144                           ; Regs used in _clear_screen: [wreg+status,2+status,0+pclath+cstack]
  1145                           
  1146                           
  1147                           ;main.c: 52:     }
  1148     0693  01F0               	clrf	clcd_write@mode
  1149     0694  3001               	movlw	1
  1150     0695  120A  118A  270B  120A  118A  	fcall	_clcd_write
  1151     069A                     l864:
  1152                           
  1153                           ;main.c: 53: 
  1154     069A  3004               	movlw	4
  1155     069B  00F5               	movwf	??_clear_screen+1
  1156     069C  303D               	movlw	61
  1157     069D  00F4               	movwf	??_clear_screen
  1158     069E                     u237:
  1159     069E  0BF4               	decfsz	??_clear_screen,f
  1160     069F  2E9E               	goto	u237
  1161     06A0  0BF5               	decfsz	??_clear_screen+1,f
  1162     06A1  2E9E               	goto	u237
  1163     06A2  2EA3               	nop2
  1164     06A3                     l37:
  1165     06A3  0008               	return
  1166     06A4                     __end_of_clear_screen:
  1167                           
  1168                           	psect	text9
  1169     070B                     __ptext9:	
  1170 ;; *************** function _clcd_write *****************
  1171 ;; Defined at:
  1172 ;;		line 58 in file "clcd.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  byte            1    wreg     unsigned char 
  1175 ;;  mode            1    0[COMMON] unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  byte            1    3[COMMON] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         1       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0
  1189 ;;      Temps:          2       0       0       0       0
  1190 ;;      Totals:         4       0       0       0       0
  1191 ;;Total ram usage:        4 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_clear_screen
  1197 ;;		_init_display_controller
  1198 ;;		_clcd_putch
  1199 ;;		_clcd_print
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203     070B                     _clcd_write:	
  1204                           ;psect for function _clcd_write
  1205                           
  1206                           
  1207                           ;incstack = 0
  1208                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1209                           ;clcd_write@byte stored from wreg
  1210     070B  00F3               	movwf	clcd_write@byte
  1211     070C                     l766:
  1212                           
  1213                           ;clcd.c: 58: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 59: {;clcd.
      +                          c: 60:     RE2 = (__bit)mode;
  1214     070C  1870               	btfsc	clcd_write@mode,0
  1215     070D  2F0F               	goto	u71
  1216     070E  2F13               	goto	u70
  1217     070F                     u71:
  1218     070F  1283               	bcf	3,5	;RP0=0, select bank0
  1219     0710  1303               	bcf	3,6	;RP1=0, select bank0
  1220     0711  1509               	bsf	9,2	;volatile
  1221     0712  2F16               	goto	u84
  1222     0713                     u70:
  1223     0713  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0714  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0715  1109               	bcf	9,2	;volatile
  1226     0716                     u84:
  1227     0716                     l768:
  1228                           
  1229                           ;clcd.c: 62:     PORTD = byte & 0xF0;
  1230     0716  0873               	movf	clcd_write@byte,w
  1231     0717  39F0               	andlw	240
  1232     0718  0088               	movwf	8	;volatile
  1233     0719                     l770:
  1234                           
  1235                           ;clcd.c: 63:     RE1 = 1;
  1236     0719  1489               	bsf	9,1	;volatile
  1237     071A                     l772:
  1238                           
  1239                           ;clcd.c: 64:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1240     071A  30A6               	movlw	166
  1241     071B  00F1               	movwf	??_clcd_write
  1242     071C                     u247:
  1243     071C  0BF1               	decfsz	??_clcd_write,f
  1244     071D  2F1C               	goto	u247
  1245     071E  0000               	nop
  1246     071F                     l774:
  1247                           
  1248                           ;clcd.c: 65:     RE1 = 0;
  1249     071F  1283               	bcf	3,5	;RP0=0, select bank0
  1250     0720  1303               	bcf	3,6	;RP1=0, select bank0
  1251     0721  1089               	bcf	9,1	;volatile
  1252     0722                     l776:
  1253                           
  1254                           ;clcd.c: 67:     PORTD = (unsigned char)((byte & 0x0F) << 4);
  1255     0722  0873               	movf	clcd_write@byte,w
  1256     0723  390F               	andlw	15
  1257     0724  00F1               	movwf	??_clcd_write
  1258     0725  3003               	movlw	3
  1259     0726                     u95:
  1260     0726  1003               	clrc
  1261     0727  0DF1               	rlf	??_clcd_write,f
  1262     0728  3EFF               	addlw	-1
  1263     0729  1D03               	skipz
  1264     072A  2F26               	goto	u95
  1265     072B  1003               	clrc
  1266     072C  0D71               	rlf	??_clcd_write,w
  1267     072D  0088               	movwf	8	;volatile
  1268     072E                     l778:
  1269                           
  1270                           ;clcd.c: 68:     RE1 = 1;
  1271     072E  1489               	bsf	9,1	;volatile
  1272     072F                     l780:
  1273                           
  1274                           ;clcd.c: 69:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1275     072F  30A6               	movlw	166
  1276     0730  00F1               	movwf	??_clcd_write
  1277     0731                     u257:
  1278     0731  0BF1               	decfsz	??_clcd_write,f
  1279     0732  2F31               	goto	u257
  1280     0733  0000               	nop
  1281     0734                     l782:
  1282                           
  1283                           ;clcd.c: 70:     RE1 = 0;
  1284     0734  1283               	bcf	3,5	;RP0=0, select bank0
  1285     0735  1303               	bcf	3,6	;RP1=0, select bank0
  1286     0736  1089               	bcf	9,1	;volatile
  1287     0737                     l784:
  1288                           
  1289                           ;clcd.c: 72:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1290     0737  301B               	movlw	27
  1291     0738  00F2               	movwf	??_clcd_write+1
  1292     0739  309E               	movlw	158
  1293     073A  00F1               	movwf	??_clcd_write
  1294     073B                     u267:
  1295     073B  0BF1               	decfsz	??_clcd_write,f
  1296     073C  2F3B               	goto	u267
  1297     073D  0BF2               	decfsz	??_clcd_write+1,f
  1298     073E  2F3B               	goto	u267
  1299     073F  0000               	nop
  1300     0740                     l80:
  1301     0740  0008               	return
  1302     0741                     __end_of_clcd_write:
  1303     007E                     btemp	set	126	;btemp
  1304     007E                     wtemp0	set	126
  1305                           
  1306                           	psect	config
  1307                           
  1308                           ;Config register CONFIG @ 0x2007
  1309                           ;	Oscillator Selection bits
  1310                           ;	FOSC = 0x3, unprogrammed default
  1311                           ;	Watchdog Timer Enable bit
  1312                           ;	WDTE = OFF, WDT disabled
  1313                           ;	Power-up Timer Enable bit
  1314                           ;	PWRTE = 0x1, unprogrammed default
  1315                           ;	Brown-out Reset Enable bit
  1316                           ;	BOREN = 0x1, unprogrammed default
  1317                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1318                           ;	LVP = 0x1, unprogrammed default
  1319                           ;	Data EEPROM Memory Code Protection bit
  1320                           ;	CPD = 0x1, unprogrammed default
  1321                           ;	Flash Program Memory Write Enable bits
  1322                           ;	WRT = 0x3, unprogrammed default
  1323                           ;	In-Circuit Debugger Mode bit
  1324                           ;	DEBUG = 0x1, unprogrammed default
  1325                           ;	Flash Program Memory Code Protection bit
  1326                           ;	CP = 0x1, unprogrammed default
  1327     2007                     	org	8199
  1328     2007  3FFB               	dw	16379

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[8]), STR_2(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_turn_on
    _turn_on->_clcd_print
    _turn_on->_clcd_putch
    _clcd_putch->_clcd_write
    _set_time->_clcd_print
    _clcd_print->_clcd_write
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clear_screen->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5816
                                             10 COMMON     2     2      0
                       _clear_screen
                        _init_config
                           _set_time
                            _turn_on
 ---------------------------------------------------------------------------------
 (1) _turn_on                                              4     4      0    2573
                                              6 COMMON     4     4      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1174
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _set_time                                             0     0      0    1263
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           2     1      1    1263
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     978
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     978
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     978
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clear_screen                                         2     2      0     978
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1     978
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear_screen
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
   _set_time
     _clcd_print
       _clcd_write
   _turn_on
     _clcd_print
     _clcd_putch
       _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 07 12:37:35 2023

                              pc 0002                   clcd_print@addr 0074                               l34 0687  
                             l19 067E                               l44 0798                               l37 06A3  
                             l71 06B4                               l80 0740                               l65 0692  
                             l68 07FB                               l77 06DC                               u70 0713  
                             u71 070F                               u84 0716                               u95 0726  
                             fsr 0004                              l800 07CE                              l802 07DA  
                            l810 0688                              l804 07DF                              l812 068B  
                            l820 06BE                              l806 07EF                              l814 068C  
                            l822 06CC                              l830 0741                              l808 07F6  
                            l816 068D                              l824 06D0                              l840 0758  
                            l770 0719                              l818 06B6                              l826 06A5  
                            l842 075C                              l780 072F                              l772 071A  
                            l828 0679                              l860 078B                              l852 076B  
                            l844 0762                              l836 0742                              l908 0700  
                            l782 0734                              l774 071F                              l766 070C  
                            l862 0693                              l790 07A8                              l854 0774  
                            l846 076A                              l838 074B                              l870 06E2  
                            l784 0737                              l776 0722                              l768 0716  
                            l864 069A                              l792 07B8                              l856 0781  
                            l872 06E7                              l778 072E                              l794 07BD  
                            l786 0799                              l866 067F                              l858 0785  
                            l874 06EC                              l882 06FB                              l796 07C4  
                            l788 07A1                              l876 06F1                              l868 06DD  
                            l798 07C7                              l878 06F6                              _RE1 0049  
                            u100 06DC                              _RE2 004A                              u101 06DB  
                            u110 0762                              u111 0761                              u120 078B  
                            u121 078A                              u207 07DC                              u217 07EA  
                            u137 0751                              u227 07F8                              u147 077A  
                            u237 069E                              u157 0791                              u247 071C  
                            u167 079D                              u257 0731                              u177 07AC  
                            u267 073B                              u187 07BA                              u197 07D0  
                 clcd_putch@addr 0074                              fsr0 0004                   clcd_putch@data 0075  
                           STR_1 0019                             STR_2 0009                             _main 06DD  
                           btemp 007E                             start 0000                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                     ?_init_config 0070  
                          _PORTD 0008                            _TRISD 0088             __end_of_clear_screen 06A4  
                          pclath 000A                            status 0003                            wtemp0 007E  
                __end_of_turn_on 0799                  __initialization 07FC                     __end_of_main 070B  
                         ??_main 007A                           _TRISE1 0449                           _TRISE2 044A  
        _init_display_controller 0799                 __end_of_set_time 0688                        ??_turn_on 0076  
        __end_of__initialization 07FC                   __pcstackCOMMON 0070        ??_init_display_controller 0074  
                     _clcd_print 06B5                       _clcd_putch 06A4                       _clcd_write 070B  
                     __pmaintext 06DD                     _clear_screen 0693                       __stringtab 0003  
                      ?_set_time 0070                          __ptext1 0741                          __ptext2 06A4  
                        __ptext3 067F                          __ptext4 06B5                          __ptext5 0679  
                        __ptext6 0688                          __ptext7 0799                          __ptext8 0693  
                        __ptext9 070B  __end_of_init_display_controller 07FC                __end_of_init_clcd 0693  
           end_of_initialization 07FC                          _turn_on 0741                      ?_clcd_print 0074  
                    ?_clcd_putch 0074                      ?_clcd_write 0070                       ??_set_time 0076  
                  clcd_print@str 0075              start_initialization 07FC                    ??_init_config 0076  
                      ___latbits 0002                        __pstrings 0003                        _init_clcd 0688  
            __end_of_init_config 067F                         ?_turn_on 0070         ?_init_display_controller 0070  
                   ??_clcd_print 0075                     ??_clcd_putch 0075                     ??_clcd_write 0071  
                    __stringbase 0008               __end_of_clcd_print 06DD               __end_of_clcd_putch 06B5  
             __end_of_clcd_write 0741                       ?_init_clcd 0070               __end_of__stringtab 0009  
                    _init_config 0679                    ?_clear_screen 0070                         _set_time 067F  
                    ??_init_clcd 0076               main@operation_flag 007A                        stringcode 0003  
                 ??_clear_screen 0074                         stringdir 0003                         stringtab 0003  
                       turn_on@i 0079  
